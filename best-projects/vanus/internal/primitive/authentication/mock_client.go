// Code generated by MockGen. DO NOT EDIT.
// Source: client.go

// Package authentication is a generated GoMock package.
package authentication

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTokenClient is a mock of TokenClient interface.
type MockTokenClient struct {
	ctrl     *gomock.Controller
	recorder *MockTokenClientMockRecorder
}

// MockTokenClientMockRecorder is the mock recorder for MockTokenClient.
type MockTokenClientMockRecorder struct {
	mock *MockTokenClient
}

// NewMockTokenClient creates a new mock instance.
func NewMockTokenClient(ctrl *gomock.Controller) *MockTokenClient {
	mock := &MockTokenClient{ctrl: ctrl}
	mock.recorder = &MockTokenClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTokenClient) EXPECT() *MockTokenClientMockRecorder {
	return m.recorder
}

// GetUser mocks base method.
func (m *MockTokenClient) GetUser(ctx context.Context, token string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUser", ctx, token)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUser indicates an expected call of GetUser.
func (mr *MockTokenClientMockRecorder) GetUser(ctx, token interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUser", reflect.TypeOf((*MockTokenClient)(nil).GetUser), ctx, token)
}
