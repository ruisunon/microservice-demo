// Code generated by MockGen. DO NOT EDIT.
// Source: index.go

// Package testing is a generated GoMock package.
package testing

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIndex is a mock of Index interface.
type MockIndex struct {
	ctrl     *gomock.Controller
	recorder *MockIndexMockRecorder
}

// MockIndexMockRecorder is the mock recorder for MockIndex.
type MockIndexMockRecorder struct {
	mock *MockIndex
}

// NewMockIndex creates a new mock instance.
func NewMockIndex(ctrl *gomock.Controller) *MockIndex {
	mock := &MockIndex{ctrl: ctrl}
	mock.recorder = &MockIndexMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIndex) EXPECT() *MockIndexMockRecorder {
	return m.recorder
}

// EndOffset mocks base method.
func (m *MockIndex) EndOffset() int64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EndOffset")
	ret0, _ := ret[0].(int64)
	return ret0
}

// EndOffset indicates an expected call of EndOffset.
func (mr *MockIndexMockRecorder) EndOffset() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EndOffset", reflect.TypeOf((*MockIndex)(nil).EndOffset))
}

// Length mocks base method.
func (m *MockIndex) Length() int32 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Length")
	ret0, _ := ret[0].(int32)
	return ret0
}

// Length indicates an expected call of Length.
func (mr *MockIndexMockRecorder) Length() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Length", reflect.TypeOf((*MockIndex)(nil).Length))
}

// StartOffset mocks base method.
func (m *MockIndex) StartOffset() int64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StartOffset")
	ret0, _ := ret[0].(int64)
	return ret0
}

// StartOffset indicates an expected call of StartOffset.
func (mr *MockIndexMockRecorder) StartOffset() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartOffset", reflect.TypeOf((*MockIndex)(nil).StartOffset))
}

// Stime mocks base method.
func (m *MockIndex) Stime() int64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Stime")
	ret0, _ := ret[0].(int64)
	return ret0
}

// Stime indicates an expected call of Stime.
func (mr *MockIndexMockRecorder) Stime() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Stime", reflect.TypeOf((*MockIndex)(nil).Stime))
}
