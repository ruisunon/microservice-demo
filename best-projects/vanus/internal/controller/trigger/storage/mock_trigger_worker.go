// Code generated by MockGen. DO NOT EDIT.
// Source: trigger_worker.go

// Package storage is a generated GoMock package.
package storage

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	metadata "github.com/vanus-labs/vanus/internal/controller/trigger/metadata"
)

// MockTriggerWorkerStorage is a mock of TriggerWorkerStorage interface.
type MockTriggerWorkerStorage struct {
	ctrl     *gomock.Controller
	recorder *MockTriggerWorkerStorageMockRecorder
}

// MockTriggerWorkerStorageMockRecorder is the mock recorder for MockTriggerWorkerStorage.
type MockTriggerWorkerStorageMockRecorder struct {
	mock *MockTriggerWorkerStorage
}

// NewMockTriggerWorkerStorage creates a new mock instance.
func NewMockTriggerWorkerStorage(ctrl *gomock.Controller) *MockTriggerWorkerStorage {
	mock := &MockTriggerWorkerStorage{ctrl: ctrl}
	mock.recorder = &MockTriggerWorkerStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTriggerWorkerStorage) EXPECT() *MockTriggerWorkerStorageMockRecorder {
	return m.recorder
}

// DeleteTriggerWorker mocks base method.
func (m *MockTriggerWorkerStorage) DeleteTriggerWorker(ctx context.Context, id string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteTriggerWorker", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteTriggerWorker indicates an expected call of DeleteTriggerWorker.
func (mr *MockTriggerWorkerStorageMockRecorder) DeleteTriggerWorker(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteTriggerWorker", reflect.TypeOf((*MockTriggerWorkerStorage)(nil).DeleteTriggerWorker), ctx, id)
}

// GetTriggerWorker mocks base method.
func (m *MockTriggerWorkerStorage) GetTriggerWorker(ctx context.Context, id string) (*metadata.TriggerWorkerInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTriggerWorker", ctx, id)
	ret0, _ := ret[0].(*metadata.TriggerWorkerInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTriggerWorker indicates an expected call of GetTriggerWorker.
func (mr *MockTriggerWorkerStorageMockRecorder) GetTriggerWorker(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTriggerWorker", reflect.TypeOf((*MockTriggerWorkerStorage)(nil).GetTriggerWorker), ctx, id)
}

// ListTriggerWorker mocks base method.
func (m *MockTriggerWorkerStorage) ListTriggerWorker(ctx context.Context) ([]*metadata.TriggerWorkerInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTriggerWorker", ctx)
	ret0, _ := ret[0].([]*metadata.TriggerWorkerInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListTriggerWorker indicates an expected call of ListTriggerWorker.
func (mr *MockTriggerWorkerStorageMockRecorder) ListTriggerWorker(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTriggerWorker", reflect.TypeOf((*MockTriggerWorkerStorage)(nil).ListTriggerWorker), ctx)
}

// SaveTriggerWorker mocks base method.
func (m *MockTriggerWorkerStorage) SaveTriggerWorker(arg0 context.Context, arg1 metadata.TriggerWorkerInfo) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveTriggerWorker", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveTriggerWorker indicates an expected call of SaveTriggerWorker.
func (mr *MockTriggerWorkerStorageMockRecorder) SaveTriggerWorker(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveTriggerWorker", reflect.TypeOf((*MockTriggerWorkerStorage)(nil).SaveTriggerWorker), arg0, arg1)
}
