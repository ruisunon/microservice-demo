// Copyright 2022 Linkall Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: trigger.proto

package trigger

import (
	config "github.com/vanus-labs/vanus/proto/pkg/config"
	meta "github.com/vanus-labs/vanus/proto/pkg/meta"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StartTriggerWorkerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *config.ServerConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *StartTriggerWorkerRequest) Reset() {
	*x = StartTriggerWorkerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trigger_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartTriggerWorkerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartTriggerWorkerRequest) ProtoMessage() {}

func (x *StartTriggerWorkerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartTriggerWorkerRequest.ProtoReflect.Descriptor instead.
func (*StartTriggerWorkerRequest) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{0}
}

func (x *StartTriggerWorkerRequest) GetConfig() *config.ServerConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type StartTriggerWorkerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StartTriggerWorkerResponse) Reset() {
	*x = StartTriggerWorkerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trigger_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartTriggerWorkerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartTriggerWorkerResponse) ProtoMessage() {}

func (x *StartTriggerWorkerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartTriggerWorkerResponse.ProtoReflect.Descriptor instead.
func (*StartTriggerWorkerResponse) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{1}
}

type StopTriggerWorkerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopTriggerWorkerRequest) Reset() {
	*x = StopTriggerWorkerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trigger_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopTriggerWorkerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopTriggerWorkerRequest) ProtoMessage() {}

func (x *StopTriggerWorkerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopTriggerWorkerRequest.ProtoReflect.Descriptor instead.
func (*StopTriggerWorkerRequest) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{2}
}

type StopTriggerWorkerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopTriggerWorkerResponse) Reset() {
	*x = StopTriggerWorkerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trigger_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopTriggerWorkerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopTriggerWorkerResponse) ProtoMessage() {}

func (x *StopTriggerWorkerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopTriggerWorkerResponse.ProtoReflect.Descriptor instead.
func (*StopTriggerWorkerResponse) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{3}
}

type AddSubscriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   uint64                   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Config               *meta.SubscriptionConfig `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	Filters              []*meta.Filter           `protobuf:"bytes,3,rep,name=filters,proto3" json:"filters,omitempty"`
	Sink                 string                   `protobuf:"bytes,4,opt,name=sink,proto3" json:"sink,omitempty"`
	SinkCredential       *meta.SinkCredential     `protobuf:"bytes,5,opt,name=sink_credential,json=sinkCredential,proto3" json:"sink_credential,omitempty"`
	Protocol             meta.Protocol            `protobuf:"varint,6,opt,name=protocol,proto3,enum=vanus.core.meta.Protocol" json:"protocol,omitempty"`
	ProtocolSettings     *meta.ProtocolSetting    `protobuf:"bytes,7,opt,name=protocol_settings,json=protocolSettings,proto3" json:"protocol_settings,omitempty"`
	Transformer          *meta.Transformer        `protobuf:"bytes,9,opt,name=transformer,proto3" json:"transformer,omitempty"`
	Offsets              []*meta.OffsetInfo       `protobuf:"bytes,10,rep,name=offsets,proto3" json:"offsets,omitempty"`
	EventbusId           uint64                   `protobuf:"varint,11,opt,name=eventbus_id,json=eventbusId,proto3" json:"eventbus_id,omitempty"`
	DeadLetterEventbusId uint64                   `protobuf:"varint,12,opt,name=dead_letter_eventbus_id,json=deadLetterEventbusId,proto3" json:"dead_letter_eventbus_id,omitempty"`
	RetryEventbusId      uint64                   `protobuf:"varint,13,opt,name=retry_eventbus_id,json=retryEventbusId,proto3" json:"retry_eventbus_id,omitempty"`
	TimerEventbusId      uint64                   `protobuf:"varint,14,opt,name=timer_eventbus_id,json=timerEventbusId,proto3" json:"timer_eventbus_id,omitempty"`
}

func (x *AddSubscriptionRequest) Reset() {
	*x = AddSubscriptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trigger_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSubscriptionRequest) ProtoMessage() {}

func (x *AddSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*AddSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{4}
}

func (x *AddSubscriptionRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddSubscriptionRequest) GetConfig() *meta.SubscriptionConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *AddSubscriptionRequest) GetFilters() []*meta.Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *AddSubscriptionRequest) GetSink() string {
	if x != nil {
		return x.Sink
	}
	return ""
}

func (x *AddSubscriptionRequest) GetSinkCredential() *meta.SinkCredential {
	if x != nil {
		return x.SinkCredential
	}
	return nil
}

func (x *AddSubscriptionRequest) GetProtocol() meta.Protocol {
	if x != nil {
		return x.Protocol
	}
	return meta.Protocol(0)
}

func (x *AddSubscriptionRequest) GetProtocolSettings() *meta.ProtocolSetting {
	if x != nil {
		return x.ProtocolSettings
	}
	return nil
}

func (x *AddSubscriptionRequest) GetTransformer() *meta.Transformer {
	if x != nil {
		return x.Transformer
	}
	return nil
}

func (x *AddSubscriptionRequest) GetOffsets() []*meta.OffsetInfo {
	if x != nil {
		return x.Offsets
	}
	return nil
}

func (x *AddSubscriptionRequest) GetEventbusId() uint64 {
	if x != nil {
		return x.EventbusId
	}
	return 0
}

func (x *AddSubscriptionRequest) GetDeadLetterEventbusId() uint64 {
	if x != nil {
		return x.DeadLetterEventbusId
	}
	return 0
}

func (x *AddSubscriptionRequest) GetRetryEventbusId() uint64 {
	if x != nil {
		return x.RetryEventbusId
	}
	return 0
}

func (x *AddSubscriptionRequest) GetTimerEventbusId() uint64 {
	if x != nil {
		return x.TimerEventbusId
	}
	return 0
}

type AddSubscriptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddSubscriptionResponse) Reset() {
	*x = AddSubscriptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trigger_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSubscriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSubscriptionResponse) ProtoMessage() {}

func (x *AddSubscriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSubscriptionResponse.ProtoReflect.Descriptor instead.
func (*AddSubscriptionResponse) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{5}
}

type RemoveSubscriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionId uint64 `protobuf:"varint,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
}

func (x *RemoveSubscriptionRequest) Reset() {
	*x = RemoveSubscriptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trigger_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSubscriptionRequest) ProtoMessage() {}

func (x *RemoveSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*RemoveSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{6}
}

func (x *RemoveSubscriptionRequest) GetSubscriptionId() uint64 {
	if x != nil {
		return x.SubscriptionId
	}
	return 0
}

type RemoveSubscriptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveSubscriptionResponse) Reset() {
	*x = RemoveSubscriptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trigger_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveSubscriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSubscriptionResponse) ProtoMessage() {}

func (x *RemoveSubscriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSubscriptionResponse.ProtoReflect.Descriptor instead.
func (*RemoveSubscriptionResponse) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{7}
}

type PauseSubscriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionId uint64 `protobuf:"varint,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
}

func (x *PauseSubscriptionRequest) Reset() {
	*x = PauseSubscriptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trigger_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PauseSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseSubscriptionRequest) ProtoMessage() {}

func (x *PauseSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*PauseSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{8}
}

func (x *PauseSubscriptionRequest) GetSubscriptionId() uint64 {
	if x != nil {
		return x.SubscriptionId
	}
	return 0
}

type PauseSubscriptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PauseSubscriptionResponse) Reset() {
	*x = PauseSubscriptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trigger_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PauseSubscriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseSubscriptionResponse) ProtoMessage() {}

func (x *PauseSubscriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseSubscriptionResponse.ProtoReflect.Descriptor instead.
func (*PauseSubscriptionResponse) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{9}
}

type ResumeSubscriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionId uint64 `protobuf:"varint,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
}

func (x *ResumeSubscriptionRequest) Reset() {
	*x = ResumeSubscriptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trigger_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResumeSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeSubscriptionRequest) ProtoMessage() {}

func (x *ResumeSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*ResumeSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{10}
}

func (x *ResumeSubscriptionRequest) GetSubscriptionId() uint64 {
	if x != nil {
		return x.SubscriptionId
	}
	return 0
}

type ResumeSubscriptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResumeSubscriptionResponse) Reset() {
	*x = ResumeSubscriptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trigger_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResumeSubscriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeSubscriptionResponse) ProtoMessage() {}

func (x *ResumeSubscriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeSubscriptionResponse.ProtoReflect.Descriptor instead.
func (*ResumeSubscriptionResponse) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{11}
}

var File_trigger_proto protoreflect.FileDescriptor

var file_trigger_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x12, 0x76, 0x61, 0x6e, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x1a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0a, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x54, 0x0a,
	0x19, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x57, 0x6f, 0x72,
	0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x76, 0x61, 0x6e,
	0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x22, 0x1c, 0x0a, 0x1a, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x1a, 0x0a, 0x18, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1b, 0x0a,
	0x19, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa9, 0x05, 0x0a, 0x16, 0x41,
	0x64, 0x64, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3b, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x76, 0x61, 0x6e, 0x75, 0x73, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x31, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x76, 0x61, 0x6e, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x6e, 0x6b, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x6e, 0x6b, 0x12, 0x48, 0x0a, 0x0f, 0x73, 0x69, 0x6e,
	0x6b, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x76, 0x61, 0x6e, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x2e, 0x53, 0x69, 0x6e, 0x6b, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x52, 0x0e, 0x73, 0x69, 0x6e, 0x6b, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x12, 0x35, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x76, 0x61, 0x6e, 0x75, 0x73, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x4d, 0x0a, 0x11, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x76, 0x61, 0x6e, 0x75, 0x73, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x3e, 0x0a, 0x0b, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x76, 0x61, 0x6e, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x52, 0x0b, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x07, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x76, 0x61, 0x6e,
	0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x4f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x75, 0x73, 0x5f, 0x69, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x75, 0x73, 0x49,
	0x64, 0x12, 0x35, 0x0a, 0x17, 0x64, 0x65, 0x61, 0x64, 0x5f, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72,
	0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x75, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x14, 0x64, 0x65, 0x61, 0x64, 0x4c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x62, 0x75, 0x73, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x65, 0x74, 0x72,
	0x79, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x75, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0f, 0x72, 0x65, 0x74, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x62,
	0x75, 0x73, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x5f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x62, 0x75, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0f, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x75, 0x73, 0x49, 0x64,
	0x4a, 0x04, 0x08, 0x08, 0x10, 0x09, 0x22, 0x19, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x44, 0x0a, 0x19, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27,
	0x0a, 0x0f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x1c, 0x0a, 0x1a, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x43, 0x0a, 0x18, 0x50, 0x61, 0x75, 0x73, 0x65, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x1b, 0x0a, 0x19, 0x50, 0x61,
	0x75, 0x73, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x44, 0x0a, 0x19, 0x52, 0x65, 0x73, 0x75, 0x6d,
	0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x1c, 0x0a,
	0x1a, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xa4, 0x05, 0x0a, 0x0d,
	0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x12, 0x66, 0x0a,
	0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2d, 0x2e, 0x76, 0x61, 0x6e, 0x75, 0x73, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x76, 0x61, 0x6e, 0x75, 0x73, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x04, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x2c, 0x2e,
	0x76, 0x61, 0x6e, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x57, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x76, 0x61,
	0x6e, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x2e, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x0f, 0x41, 0x64,
	0x64, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x2e,
	0x76, 0x61, 0x6e, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x76, 0x61, 0x6e, 0x75,
	0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x41,
	0x64, 0x64, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x73, 0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x2e, 0x76,
	0x61, 0x6e, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x76, 0x61,
	0x6e, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x70, 0x0a, 0x11, 0x50,
	0x61, 0x75, 0x73, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2c, 0x2e, 0x76, 0x61, 0x6e, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x75, 0x73, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d,
	0x2e, 0x76, 0x61, 0x6e, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x75, 0x73, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x73, 0x0a,
	0x12, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x2e, 0x76, 0x61, 0x6e, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x76, 0x61, 0x6e, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x2f, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x76, 0x61, 0x6e, 0x75, 0x73, 0x2d, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x76, 0x61, 0x6e, 0x75,
	0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x74, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_trigger_proto_rawDescOnce sync.Once
	file_trigger_proto_rawDescData = file_trigger_proto_rawDesc
)

func file_trigger_proto_rawDescGZIP() []byte {
	file_trigger_proto_rawDescOnce.Do(func() {
		file_trigger_proto_rawDescData = protoimpl.X.CompressGZIP(file_trigger_proto_rawDescData)
	})
	return file_trigger_proto_rawDescData
}

var file_trigger_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_trigger_proto_goTypes = []interface{}{
	(*StartTriggerWorkerRequest)(nil),  // 0: vanus.core.trigger.StartTriggerWorkerRequest
	(*StartTriggerWorkerResponse)(nil), // 1: vanus.core.trigger.StartTriggerWorkerResponse
	(*StopTriggerWorkerRequest)(nil),   // 2: vanus.core.trigger.StopTriggerWorkerRequest
	(*StopTriggerWorkerResponse)(nil),  // 3: vanus.core.trigger.StopTriggerWorkerResponse
	(*AddSubscriptionRequest)(nil),     // 4: vanus.core.trigger.AddSubscriptionRequest
	(*AddSubscriptionResponse)(nil),    // 5: vanus.core.trigger.AddSubscriptionResponse
	(*RemoveSubscriptionRequest)(nil),  // 6: vanus.core.trigger.RemoveSubscriptionRequest
	(*RemoveSubscriptionResponse)(nil), // 7: vanus.core.trigger.RemoveSubscriptionResponse
	(*PauseSubscriptionRequest)(nil),   // 8: vanus.core.trigger.PauseSubscriptionRequest
	(*PauseSubscriptionResponse)(nil),  // 9: vanus.core.trigger.PauseSubscriptionResponse
	(*ResumeSubscriptionRequest)(nil),  // 10: vanus.core.trigger.ResumeSubscriptionRequest
	(*ResumeSubscriptionResponse)(nil), // 11: vanus.core.trigger.ResumeSubscriptionResponse
	(*config.ServerConfig)(nil),        // 12: vanus.core.config.ServerConfig
	(*meta.SubscriptionConfig)(nil),    // 13: vanus.core.meta.SubscriptionConfig
	(*meta.Filter)(nil),                // 14: vanus.core.meta.Filter
	(*meta.SinkCredential)(nil),        // 15: vanus.core.meta.SinkCredential
	(meta.Protocol)(0),                 // 16: vanus.core.meta.Protocol
	(*meta.ProtocolSetting)(nil),       // 17: vanus.core.meta.ProtocolSetting
	(*meta.Transformer)(nil),           // 18: vanus.core.meta.Transformer
	(*meta.OffsetInfo)(nil),            // 19: vanus.core.meta.OffsetInfo
}
var file_trigger_proto_depIdxs = []int32{
	12, // 0: vanus.core.trigger.StartTriggerWorkerRequest.config:type_name -> vanus.core.config.ServerConfig
	13, // 1: vanus.core.trigger.AddSubscriptionRequest.config:type_name -> vanus.core.meta.SubscriptionConfig
	14, // 2: vanus.core.trigger.AddSubscriptionRequest.filters:type_name -> vanus.core.meta.Filter
	15, // 3: vanus.core.trigger.AddSubscriptionRequest.sink_credential:type_name -> vanus.core.meta.SinkCredential
	16, // 4: vanus.core.trigger.AddSubscriptionRequest.protocol:type_name -> vanus.core.meta.Protocol
	17, // 5: vanus.core.trigger.AddSubscriptionRequest.protocol_settings:type_name -> vanus.core.meta.ProtocolSetting
	18, // 6: vanus.core.trigger.AddSubscriptionRequest.transformer:type_name -> vanus.core.meta.Transformer
	19, // 7: vanus.core.trigger.AddSubscriptionRequest.offsets:type_name -> vanus.core.meta.OffsetInfo
	0,  // 8: vanus.core.trigger.TriggerWorker.Start:input_type -> vanus.core.trigger.StartTriggerWorkerRequest
	2,  // 9: vanus.core.trigger.TriggerWorker.Stop:input_type -> vanus.core.trigger.StopTriggerWorkerRequest
	4,  // 10: vanus.core.trigger.TriggerWorker.AddSubscription:input_type -> vanus.core.trigger.AddSubscriptionRequest
	6,  // 11: vanus.core.trigger.TriggerWorker.RemoveSubscription:input_type -> vanus.core.trigger.RemoveSubscriptionRequest
	8,  // 12: vanus.core.trigger.TriggerWorker.PauseSubscription:input_type -> vanus.core.trigger.PauseSubscriptionRequest
	10, // 13: vanus.core.trigger.TriggerWorker.ResumeSubscription:input_type -> vanus.core.trigger.ResumeSubscriptionRequest
	1,  // 14: vanus.core.trigger.TriggerWorker.Start:output_type -> vanus.core.trigger.StartTriggerWorkerResponse
	3,  // 15: vanus.core.trigger.TriggerWorker.Stop:output_type -> vanus.core.trigger.StopTriggerWorkerResponse
	5,  // 16: vanus.core.trigger.TriggerWorker.AddSubscription:output_type -> vanus.core.trigger.AddSubscriptionResponse
	7,  // 17: vanus.core.trigger.TriggerWorker.RemoveSubscription:output_type -> vanus.core.trigger.RemoveSubscriptionResponse
	9,  // 18: vanus.core.trigger.TriggerWorker.PauseSubscription:output_type -> vanus.core.trigger.PauseSubscriptionResponse
	11, // 19: vanus.core.trigger.TriggerWorker.ResumeSubscription:output_type -> vanus.core.trigger.ResumeSubscriptionResponse
	14, // [14:20] is the sub-list for method output_type
	8,  // [8:14] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_trigger_proto_init() }
func file_trigger_proto_init() {
	if File_trigger_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_trigger_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartTriggerWorkerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trigger_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartTriggerWorkerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trigger_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopTriggerWorkerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trigger_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopTriggerWorkerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trigger_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddSubscriptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trigger_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddSubscriptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trigger_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveSubscriptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trigger_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveSubscriptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trigger_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PauseSubscriptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trigger_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PauseSubscriptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trigger_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResumeSubscriptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trigger_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResumeSubscriptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_trigger_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_trigger_proto_goTypes,
		DependencyIndexes: file_trigger_proto_depIdxs,
		MessageInfos:      file_trigger_proto_msgTypes,
	}.Build()
	File_trigger_proto = out.File
	file_trigger_proto_rawDesc = nil
	file_trigger_proto_goTypes = nil
	file_trigger_proto_depIdxs = nil
}
