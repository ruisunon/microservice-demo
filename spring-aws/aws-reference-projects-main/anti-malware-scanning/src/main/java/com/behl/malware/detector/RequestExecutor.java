package com.behl.malware.detector;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import com.amazonaws.services.s3.event.S3EventNotification;
import com.amazonaws.services.s3.model.S3Object;
import xyz.capybara.clamav.ClamavClient;

/**
 * <p>
 * The {@link #handleRequest(S3EventNotification)} method is to be configured to run once the lambda
 * function is triggered for any S3:PutObject event. The value of
 * <code>com.behl.malware.detector.RequestExecutor::handleRequest</code> is to be configured in the
 * Function handler of the provisioned lambda function.
 * </p>
 * 
 * @see https://docs.aws.amazon.com/lambda/latest/dg/java-handler.html
 *
 */
public class RequestExecutor {

  private final static Logger logger = LoggerFactory.getLogger(AntiMalwareScannerService.class);

  /***
   * <p>
   * Method that received information about the uploaded object against the event of
   * <code>S3:PutObject</code>, fetches the object from the target S3 Bucket and scans it against
   * the provisioned ClamAV engine for malware detection.
   * </p>
   * <p>
   * If any malware/virus is detected against the uploaded object, RemedialProcedure.perform method
   * is called which publishes the event record information to configured SNS topic.
   * </p>
   * 
   * @see com.behl.malware.detector.AntiMalwareScannerService#scan(java.io.InputStream)
   * @see com.behl.malware.detector.RemedialProcedure#perform(com.amazonaws.services.s3.event.S3EventNotification.S3EventNotificationRecord)
   * @see com.behl.malware.detector.S3Service#getObject(String, String)
   * @see com.behl.malware.detector.PropertiesUtil
   * 
   * @param s3EventNotification
   */
  public void handleRequest(S3EventNotification s3EventNotification) {
    final String clamAvHost = PropertiesUtil.getClamAvHost();
    final Integer clamAvPort = PropertiesUtil.getClamAvPort();

    final ClamavClient clamavClient = new ClamavClient(clamAvHost, clamAvPort);
    final AntiMalwareScannerService antiMalwareScannerService =
        new AntiMalwareScannerService(clamavClient);

    s3EventNotification.getRecords().forEach(s3EventNotificationRecord -> {
      final String bucketName = s3EventNotificationRecord.getS3().getBucket().getName();
      final String objectKey = s3EventNotificationRecord.getS3().getObject().getKey();
      logger.info(
          "Proceeding with anti-malware scanning execution on object {} stored in bucket {}",
          objectKey, bucketName);

      final S3Object s3Object = S3Service.getObject(bucketName, objectKey);
      try {
        antiMalwareScannerService.scan(s3Object.getObjectContent());
      } catch (MalwareDetectedException exception) {
        logger.error("Malware detected in {} stored in bucket {}", objectKey, bucketName);
        RemedialProcedure.perform(s3EventNotificationRecord);
      }
    });
  }

}
