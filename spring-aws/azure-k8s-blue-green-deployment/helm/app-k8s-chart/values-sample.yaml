
## Apps

services:
- name: server
  replicaCount: 1
  enabled: true
  image:
    repository: server
    pullPolicy: IfNotPresent
    tag: "1.0.0"
  resources:
    requests:
       cpu: 300m
       memory: 250Mi
    limits:
       cpu: 1
       memory: 1Gi
  ports:
  - name: http
    containerPort: 8080
    protocol: TCP
  labels:
    app: server
    env: dev
    release: 1.0.0
    tier: backend
  selectorLabels:
    app: server
    env: dev
    tier: backend  
  service:
    type: ClusterIP
    port: 8080
  config_enabled: true
  config_volumes_enabled: true
  volumes:
  - name: server-config-map
    configMap:
       name: server-config-map
  volumeMounts:
  - name: server-config-map
    mountPath: /app/server
    subPath: .env
  livenessProbe:
    httpGet:
      path: /liveness
      port: http
    initialDelaySeconds: 15
    timeoutSeconds: 5
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 3     
  readinessProbe:
    httpGet:
      path: /readiness
      port: http
    initialDelaySeconds: 20
    timeoutSeconds: 5
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 3 
  hpa:
    enabled: true
    minReplicas: 1
    maxReplicas: 10
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

  pdb:
    enabled: true
    minAvailable: 1
  configMap:
    enabled: true
    name: server-config-map
  secret:
    enabled: true
    name: server-secret


- name: client
  replicaCount: 1
  enabled: true
  image:
    repository: client
    pullPolicy: IfNotPresent
    tag: "1.0.0"

  resources:
    requests:
      cpu: 300m
      memory: 250Mi
    limits:
      cpu: 1
      memory: 1Gi
  ports:
  - name: http
    containerPort: 2000
    protocol: TCP
  labels:
    app: client
    env: dev
    release: 1.0.0
    tier: frontend
  selectorLabels:
    app: client
    env: dev
    tier: frontend 

  service:
    type: ClusterIP
    port: 2000

  config_enabled: false
  hpa:
    enabled: true
    minReplicas: 1
    maxReplicas: 10
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
  pdb:
    enabled: true
    minAvailable: 1
  configMap:
    enabled: false
    name: client-config-map
  secret:
    enabled: false
    name: client-secret


imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""


podSecurityContext:
  fsGroup: 2000

securityContext:
  capabilities:
    drop:
    - ALL
  runAsNonRoot: true
  runAsUser: 1000



ingress:
  enabled: false

tolerations: []


serviceAccount:
   create: false
   name: default

affinity:
  # nodeAffinity:
  #   requiredDuringSchedulingIgnoredDuringExecution:
  #     nodeSelectorTerms:
  #     - matchExpressions:
  #       - key: env
  #         operator: In
  #         values:
  #         - dev
  #   preferredDuringSchedulingIgnoredDuringExecution:
  #   - weight: 1
  #     preference:
  #       matchExpressions:
  #       - key: platform
  #         operator: In
  #         values:
  #         - apps
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app
            operator: In
            values:
            - server
        topologyKey: kubernetes.io/hostname